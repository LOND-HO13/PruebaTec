@model Incidencias.Core.Models.Incidencia

@{
    ViewBag.Title = "Editar Incidencia";
}

<div class="container-fluid py-4">
    <div class="card border-0 shadow-lg">
        <div class="card-header bg-primary text-white py-3">
            <div class="d-flex justify-content-between align-items-center">
                <h3 class="mb-0">
                    <i class="fas fa-edit me-2"></i>Editando Incidencia #@Model.Id
                </h3>
                <div class="badge bg-light text-dark fs-6 p-2">
                    <i class="fas fa-calendar-alt me-2"></i>@Model.FechaCreacion.ToString("dd MMM yyyy")
                </div>
            </div>
        </div>

        <div class="card-body p-4">
            @using (Html.BeginForm("Edit", "Incidencia", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate", id = "editForm" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id)

                <div class="row g-4">
                    <!-- Columna Izquierda - Campos Editables -->
                    <div class="col-lg-6">
                        <div class="form-floating mb-4">
                            @Html.TextBoxFor(model => model.Titulo, new { @class = "form-control", placeholder = " " })
                            @Html.LabelFor(model => model.Titulo)
                            <div class="invalid-feedback">
                                Título requerido
                            </div>
                        </div>

                        <div class="form-floating mb-4">
                            @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control", placeholder = " ", style = "height: 150px" })
                            @Html.LabelFor(model => model.Descripcion)
                            <div class="invalid-feedback">
                                Descripción requerida
                            </div>
                        </div>

                        <div class="row g-3">
                            <div class="col-md-6">
                                <div class="form-floating">
                                    @Html.EnumDropDownListFor(model => model.Estado, "Seleccione estado...", new { @class = "form-select" })
                                    @Html.LabelFor(model => model.Estado)
                                    <div class="invalid-feedback">
                                        Seleccione un estado
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-floating">
                                    @Html.EnumDropDownListFor(model => model.Prioridad, "Seleccione prioridad...", new { @class = "form-select" })
                                    @Html.LabelFor(model => model.Prioridad)
                                    <div class="invalid-feedback">
                                        Seleccione prioridad
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Columna Derecha - Asignaciones y Comentarios -->
                    <div class="col-lg-6">
                        <div class="card border-0 h-100">
                            <div class="card-body">
                                <!-- Asignaciones -->
                                <div class="mb-4">
                                    <h5 class="mb-3 text-primary">
                                        <i class="fas fa-users-cog me-2"></i>Asignaciones
                                    </h5>

                                    <div class="form-floating mb-3">
                                        @Html.DropDownListFor(model => model.TecnicoAsignadoId, (SelectList)ViewBag.TecnicoAsignadoId, new { @class = "form-select" })
                                        @Html.LabelFor(model => model.TecnicoAsignadoId)
                                        <div class="invalid-feedback">
                                            Seleccione un técnico
                                        </div>
                                    </div>

                                    <div class="form-floating">
                                        @Html.DropDownListFor(model => model.UsuarioReportaId, (SelectList)ViewBag.UsuarioReportaId, new { @class = "form-select" })
                                        @Html.LabelFor(model => model.UsuarioReportaId)
                                        <div class="invalid-feedback">
                                            Seleccione un usuario
                                        </div>
                                    </div>
                                </div>

                                <!-- Nuevo Comentario -->
                                <div class="mb-4">
                                    <h5 class="mb-3 text-primary">
                                        <i class="fas fa-comment-medical me-2"></i>Agregar Comentario
                                    </h5>

                                    <div class="form-floating">
                                        <textarea class="form-control" name="nuevoComentario"
                                                  placeholder="Escriba un nuevo comentario..."
                                                  style="height: 100px"
                                                  required></textarea>
                                        <label>Comentario</label>
                                        <div class="invalid-feedback">
                                            El comentario es obligatorio
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Historial de Comentarios -->
                <div class="mt-4">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h5 class="text-primary mb-0">
                            <i class="fas fa-comments me-2"></i>Historial de Comentarios
                        </h5>
                        <small class="text-muted">Mostrando @Model.Comentarios.Count comentarios</small>
                    </div>

                    <div class="comment-scroll" style="max-height: 400px; overflow-y: auto;">
                        @foreach (var comentario in Model.Comentarios.OrderByDescending(c => c.Fecha))
                        {
                            <div class="card mb-3 border-start border-3 border-primary">
                                <div class="card-body py-3">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <div class="d-flex align-items-center">
                                            <span class="badge bg-primary me-2">
                                                @comentario.Autor
                                            </span>
                                            <small class="text-muted">
                                                @comentario.Fecha.ToString("dd MMM yyyy HH:mm")
                                            </small>
                                        </div>
                                        @if (comentario.EsInterno)
                                        {
                                            <span class="badge bg-warning text-dark">
                                                <i class="fas fa-eye-slash me-1"></i>Interno
                                            </span>
                                        }
                                    </div>
                                    <p class="mb-0">@comentario.Contenido</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Acciones -->
                <div class="d-flex justify-content-between mt-4">
                    <button type="submit" class="btn btn-primary btn-lg px-5">
                        <i class="fas fa-save me-2"></i>Guardar Cambios
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary btn-lg px-5">
                        <i class="fas fa-times me-2"></i>Cancelar
                    </a>
                </div>
            }
        </div>
    </div>
</div>


   <style>
        .comment-scroll::-webkit-scrollbar {
            width: 8px;
        }

        .comment-scroll::-webkit-scrollbar-track {
            background: #f8f9fa;
        }

        .comment-scroll::-webkit-scrollbar-thumb {
            background: #ced4da;
            border-radius: 4px;
        }

        .form-floating > .form-control:focus ~ label,
        .form-floating > .form-control:not(:placeholder-shown) ~ label {
            transform: scale(0.85) translateY(-1.5rem) translateX(0.15rem);
        }

        .card-header {
            border-radius: 0.5rem 0.5rem 0 0 !important;
        }
   </style>


@section Scripts {
    <script>
        // Inicialización de componentes
        $(document).ready(function () {
            // Select2 para dropdowns
            $('.form-select').select2({
                theme: 'bootstrap-5',
                placeholder: 'Seleccione...',
                width: '100%'
            });

            // Validación del formulario
            $('#editForm').on('submit', function (e) {
                if (!this.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                $(this).addClass('was-validated');
            });

            // Auto-resize textarea
            $('textarea').each(function () {
                this.setAttribute('style', 'height:' + (this.scrollHeight) + 'px;overflow-y:hidden;');
            }).on('input', function () {
                this.style.height = 'auto';
                this.style.height = (this.scrollHeight) + 'px';
            });
        });
    </script>
}